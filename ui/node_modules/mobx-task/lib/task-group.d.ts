import { Task } from './task';
declare type QueryableMethods = 'state' | 'pending' | 'resolved' | 'rejected' | 'result' | 'error' | 'match';
/**
 * Task Group contains queryable properties of the task.
 */
export declare type TaskGroup<A extends any[], R> = Pick<Task<A, R>, QueryableMethods>;
/**
 * Creates a group of tasks where the state of the task that last change its' state
 * is used.
 *
 * @param tasks
 */
export declare function TaskGroup<A extends any[], R>(tasks: Array<Task<A, R>>): TaskGroup<A, R>;
export {};
