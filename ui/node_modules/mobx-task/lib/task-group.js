"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mobx_1 = require("mobx");
/**
 * The keys that are being proxied.
 */
const keysToDefinePropertiesFor = [
    'state',
    'pending',
    'resolved',
    'rejected',
    'result',
    'error',
    'match'
];
/**
 * Creates a group of tasks where the state of the task that last change its' state
 * is used.
 *
 * @param tasks
 */
function TaskGroup(tasks) {
    if (!tasks || tasks.length === 0) {
        throw new TypeError('TaskGroup: there must be at least one task in the array passed to TaskGroup.');
    }
    const initialTask = tasks.find(t => t.pending) || tasks[0];
    const latestTask = mobx_1.observable.box(initialTask, {
        defaultDecorator: mobx_1.observable.ref
    });
    tasks.forEach(t => {
        mobx_1.reaction(() => t.pending === true, pending => pending && latestTask.set(t));
    });
    const group = {};
    keysToDefinePropertiesFor.forEach(key => {
        const c = mobx_1.computed(() => latestTask.get()[key]);
        Object.defineProperty(group, key, {
            configurable: false,
            get: () => c.get()
        });
    });
    return group;
}
exports.TaskGroup = TaskGroup;
//# sourceMappingURL=task-group.js.map